      SUBROUTINE BIND(U,F,DR,RM,FNODE,FL,K,FK,ETA,V,E,FK2,ISW,IERR)
C     THE NEXT 6 CARDS CONVERT CHUCK TO AN IBM 360
      IMPLICIT REAL*8(A-H,O-Z)
C     SQRT(XXX)=DSQRT(XXX)
C     FLOAT(III)=DFLOAT(III)
C     ABS(XXX)=DABS(XXX)
C     ALOG(XXX)=DLOG(XXX)
C     EXP(XXX)=DEXP(XXX)
      DIMENSION U(800),F(400)
      DATA ICMAX/16/
      DATA EPS,FLAMX,DETX/1.0D-06,1.0D-04,1.0D-03/
      DATA PI,UMAX,UMAXSQ/3.141593,1.0D+16,1.0D+32/
      ICNT=0
      FLP=FL*(FL+1.0)
      DR2=DR*DR/12.0
      MT=K+K-1
      LL=FL+1.
C
C     CALCULATE OUTER BOUNDARY CONDITION
C
   10 CONTINUE
      ICNT=ICNT+1
      RNORM=0.0
      R=DR*FLOAT(K)
      IF(FK2.LT.0.0) GO TO 23
      M=MAX0(LL+1,3)
      T3=FK*(R-DR)
      T4=FK*R
      R1=T3*1.01
      R2=T4*1.01
      ETAP=ETA/1.01
      FLL=FL+1.
      CALL COU(R1,R2,ETAP,M,DR,F( 1),F(21),F(41),F(61),F(81))
      SURF=1.01*FK*(SQRT(FLL*FLL+ETAP*ETAP)*F(LL+61)/F(LL+60))/FLL
      R1=0.99*T3
      R2=0.99*T4
      ETAP=ETA/0.99
      CALL COU(R1,R2,ETAP,M,DR,F( 1),F(21),F(41),F(61),F(81))
      SURF=0.99*FK*(SQRT(FLL*FLL+ETAP*ETAP)*F(LL+61)/F(LL+60))/FLL-SURF
      R1=T3
      R2=T4
      CALL COU(R1,R2,ETA ,M,DR,F( 1),F(21),F(41),F(61),F(81))
      T6=F(LL+60)
      T5=F(LL+40)
      T4=F(LL+20)
      T3=F(LL   )
      SURF=SURF*25.0*T6*T6/FK2
      IF(ISW.NE.2) GO TO 40
      KM=K
      GO TO 120
   23 CONTINUE
      T3=FLP/(R-DR)**2-U(MT-1)-V*U(MT-2)
      T4=FLP/ R    **2-U(MT+1)-V*U(MT  )
      T3=SQRT(T3)
      T4=SQRT(T4)
      T5=DR*(T3+T4)/2.0
      T5=SQRT(T4/T3)*EXP(T5)
      T5=T5*EPS
      T6=EPS
   40 FNCT=0.0
      KT=K-2
C
C     INTEGRATE FROM INFINITY TO CLASSICAL TURNING POINT
C
      IFLAG=0
   41 CONTINUE
      R=DR*FLOAT(K-1)
      G6=U(MT+1)-FLP/(R+DR)**2
      G5=U(MT-1)-FLP/ R    **2
      IF(FK2.LT.0.0) GO TO 46
      IF(G5.LT.0.0) IFLAG=IFLAG+1
   46 CONTINUE
      Q6=1.0+DR2*G6
      Q5=1.0+DR2*G5
      F6=T6
      F5=T5
      W2=0.0
      FNORM2=0.0
      F(K  )=F6
      F(K-1)=F5
      DO 100 M=1,KT
      MM=K-M-1
      MK=MM+MM-1
      R=R-DR
      G4=U(MK+1)+V*U(MK  )-FLP/R**2
      Q4=1.0+DR2*G4
      F4=((12.0-10.0*Q5)*F5-Q6*F6)/Q4
      Q6=Q5
      Q5=Q4
      F6=F5
      F5=F4
      G6=G5
      G5=G4
      F(MM)=F4
      IF(G6*G5.GT.0.0) GO TO 90
      IFLAG=IFLAG+1
      IF(FK2.LT.0.0) GO TO 110
      IF(IFLAG.GE.2) GO TO 110
   90 CONTINUE
      TEMP=F6*F6
      IF(TEMP.LT.1.E-18) GO TO 100
      FNORM2=FNORM2+TEMP
      W2=W2+U(MK+2)*TEMP
      IF(TEMP.LE.UMAXSQ) GO TO 100
      RNORM=RNORM+1.0
      FNORM2=FNORM2/UMAXSQ
      W2=W2/UMAXSQ
      F5=F5/UMAX
      F6=F6/UMAX
      MP=M+2
      DO 95 I=1,MP
      MPP=K+1-I
      IF(ABS(F(MPP)).GE.1.0/UMAX) GO TO 92
      F(MPP)=0.0
      GO TO 95
   92 CONTINUE
      F(MPP)=F(MPP)/UMAX
   95 CONTINUE
  100 CONTINUE
      IF(IFLAG.GE.2) GO TO 110
      IFLAG=2
      KT=NINT(RM/DR)+1
      KT=K-KT-1
      GO TO 41
  110 CONTINUE
C
C     INTEGRATE FROM ORIGIN   TO CLASSICAL TURNING POINT
C
      KM=MM+1
  120 CONTINUE
      KS=FL/3.4+2.0
      W1=0.0
      FNORM1=0.0
      F2=0.0
      Q2=0.0
      R =0.0
      DO 200 M=1,KM
      MK=M+M-1
      R=R+DR
      Q3=1.0+DR2*(U(MK+1)+V*U(MK  )-FLP/R**2)
      IF(M.GT.KS) GO TO 150
      F3=R**LL
      GO TO 151
  150 CONTINUE
      F3=((12.0-10.0*Q2)*F2-Q1*F1)/Q3
  151 CONTINUE
      Q1=Q2
      Q2=Q3
      F1=F2
      F2=F3
      F(M)=F3
      TEMP=F2*F2
      FNORM1=FNORM1+TEMP
      W1=W1+U(MK)*TEMP
      IF(F1*F2.LT.0.0) FNCT=FNCT+1.0
      IF(TEMP.LE.UMAXSQ) GO TO 200
      FNORM1=FNORM1/UMAXSQ
      W1=W1/UMAXSQ
      F1=F1/UMAX
      F2=F2/UMAX
      DO 195 I=1,M
      IF(ABS(F(I)).GE.1.0/UMAX) GO TO 192
      F(I)=0.0
      GO TO 195
  192 CONTINUE
      F(I)=F(I)/UMAX
  195 CONTINUE
  200 CONTINUE
      IF(ISW.EQ.2) GO TO 650
      DET=(F1*F6-F5*F2)/(F2*F6*DR)
      FN=FNODE-FNCT
      R=FLOAT(KM)*DR
      FNORM1=FNORM1/(F2*F2)
      FNORM2=FNORM2/(F6*F6)
      FNORM=FNORM1+FNORM2
      IF(ICNT.EQ.ICMAX) GO TO 600
      IF(ISW.EQ.1) GO TO 451
C
C     CHOOSE NEXT GUESS ON WELL DEPTH
C
      IF(FN.EQ.0.0) GO TO 280
      FLAM=1.0+ABS(E)*3.0*FN/(V*FK*RM)
      GO TO 382
  280 FLAM=1.0-DET/(V*DR*(W1/(F2*F2)+W2/(F6*F6)))
  382 CONTINUE
      IF((ABS(DET).LE.DETX).AND.(ABS(FLAM-1.0).LE.FLAMX)) GO TO 500
      IF(FLAM.GT.1.2) FLAM=1.2
      IF(FLAM.LT.0.8) FLAM=0.8
      V=V*FLAM
      GO TO 10
C
C     CHOOSE NEXT GUESS ON BINDING ENERGY
C
  451 CONTINUE
      IF(FN.EQ.0.0) GO TO 480
      FLAM=1.0+ABS(E)*3.0*FN/(E*FK*RM)
      GO TO 482
  480 CONTINUE
      FLAM=1.0-DET/(DR*FK2*FNORM1)
  482 CONTINUE
      IF((ABS(DET).LE.DETX).AND.(ABS(FLAM-1.0).LE.FLAMX)) GO TO 500
      IF(FLAM.GT.1.2) FLAM=1.2
      IF(FLAM.LT.0.8) FLAM=0.8
      TEMP=SQRT(FLAM)
      FK=FK*TEMP
      ETA=ETA/TEMP
      TEMP=FK2*FLAM-FK2
      FK2=FK2+TEMP
      E=E*FLAM
      DO 485 M=1,K
      MK=M+M-1
      U(MK+1)=U(MK+1)+TEMP
  485 CONTINUE
      GO TO 10
C
C     NORMALIZE FUNCTION
C     FOR E .GT. 0., NORMALIZE TO VINCENT AND FORTUNE EQ 7 OR 30
C
  500 CONTINUE
      WRITE(6,9500) V,DET,FNCT,R,E,ICNT
      VOL=FNORM*DR*F6*F6
      FNORM=SQRT(FNORM*DR)
      IF(FK2.LT.0.0) GO TO 505
      RNORM=UMAX**NINT(RNORM)
      TEMP=VOL+SURF
      IF(RNORM.GT.2.0) TEMP=VOL
      GAM=2.0*E/(FK*TEMP)
      VOL=VOL*RNORM*RNORM
      WRITE(6,9502) GAM,VOL,SURF
      FNORM=SQRT(ABS(TEMP))/F6
  505 CONTINUE
      TEMP=1.0/(F2*FNORM)
      R=0.0
      DO 510 M=1,KM
      R=R+DR
      F(M)=F(M)*TEMP/R
  510 CONTINUE
      KM=KM+1
      TEMP=1.0/(F6*FNORM)
  515 CONTINUE
      DO 520 M=KM,K
      R=R+DR
      F(M)=F(M)*TEMP/R
  520 CONTINUE
      RM=FLOAT(KM)*DR
      RETURN
C
C     ERROR MESSAGE
C
  600 WRITE(6,9001) ICMAX
      IERR=1
      GO TO 500
C
C     NORM TO SIN(K*R+DELTA)/(K*R)
C
  650 CONTINUE
      DET=T3*T6-T4*T5
      A1=(F1*T6-F2*T5)/DET
      B1=(F2*T3-F1*T4)/DET
      DET=1.0/SQRT(A1*A1+B1*B1)
      A1=A1*DET
      B1=B1*DET
      TEMP=DET*SQRT(FK/(PI*E))
      WRITE(6,9501)A1,B1
      KM=1
      R=0.0
      GO TO 515
 9001 FORMAT(1H0,28HBOUND STATE SEARCH FAILS IN ,I2,11H ITERATIONS)
 9500 FORMAT(21X,6HV    =,F9.4,3X,6HDET  =,F9.4,3X,6HNODES=,F9.4,3X,
     1 6HRM   =,F9.4,3X,6HE    =,F9.4,3X,6HITER.=,I4)
 9501 FORMAT(21X,6HCOSD =,F9.4,9H   SIND =,F9.4)
 9502 FORMAT(31H0UNBOUND FORM FACTOR    GAMMA =,E12.4,15H MEV      VOL =
     1,E12.4,10H    SURF =,E12.4)
      END
      SUBROUTINE COU(R,RP,E,L,H,F,FP,G,GP,S)
C     THE NEXT 8 CARDS CONVERT DWUCK TO AN IBM 360
      IMPLICIT REAL*8(A-H,O-Z)
C     SQRT(XXX)=DSQRT(XXX)
C     FLOAT(III)=DFLOAT(III)
C     ABS(XXX)=DABS(XXX)
C     SIN(XXX)=DSIN(XXX)
C     COS(XXX)=DCOS(XXX)
C     ALOG(XXX)=DLOG(XXX)
C     ATAN(XXX)=DATAN(XXX)
      DIMENSION F(51),FP(51),G(51),GP(51),S(51)
C
      TE=2.*E
      TF=E*E
      LL=L
      IF(LL-50)20,35,35
   20 ELP=50.0
      J=50
      GO TO 45
   35 ELP=LL
      J=LL
   45 A=ATAN (E/ELP)
      B=SQRT (TF+ELP*ELP)
      Y=A*(ELP-0.5)+E*(LOG(B)-1.)-SIN (A)/(12.*B)
     1  +SIN (3.*A)/(360.*B**3)-SIN (5.*A)/(1260.*B**5)
     2  +SIN (7.*A)/(1680.*B**7)-SIN (9.*A)/(1188.*B**9)
      K=J-1
      IF(J-LL)65,65,70
   65 S(J)=Y
   70 DO 100 I=1,K
      ELP=ELP-1.0
      J=J-1
      Y=Y-ATAN (E/ELP)
      IF(J-LL)95,95,100
   95 S(J)=Y
  100 CONTINUE
      DEL1=R-TE
      RMAX=.41666667*(TF+4.*E+3.)
      IF(RMAX.LT.10.0) RMAX=10.0
      DEL=R-RMAX
      IF(E-5.)280,130,130
  130 IF(ABS (DEL1)-ABS (DEL))140,140,280
  140 DEL=DEL1
      IF(DEL)147,145,147
  145 I=2
      GO TO 150
  147 I=1
  150 X=TE
      T1=TF
      T2=T1*T1
      T3=E** .666666667
      T4=T3*T3
      T5=T4*T4
      T6=T3*T5
      T7=T4*T6
      T8=T3*T7
      T9=E** .166666667
      Y=1.22340402*T9*(1.+.495957017D-1/T4-.888888889D-2/T1+.245519918
     1D-2/T6-.910895806D-3/T2+.845362D-3/T8)
      Z=-.707881773/T9*(1.-.172826039/T3+.317460317D-3/T1-.358121485
     1D-2/T5+.311782468D-3/T2-.907396643D-3/T7)
      GO TO 665
  280 IF(E)285,290,285
  285 IF(DEL)310,290,290
  290 X=R
      I=2
      GO TO 320
  310 X=RMAX
      I=1
  320 T1=TF
      T2=2.*X
      T3=X-E*LOG(T2)+S(1)
      T4=E/T2
      SS=1.0
      TS=0.0
      SL=0.0
      TL=1.-E/X
      SSS=1.0
      STS=0.0
      SSL=0.0
      STL=TL
      EN=0.0
      DO 620 K=1,25
      T5=EN+1.0
      T6=T5+EN
      T7=EN*T5
      T8=T6*T4/T5
      T9=(T1-T7)/(T2*T5)
      T5=T8*SS-T9*TS
      TS=T8*TS+T9*SS
      SS=T5
      IF(ABS (SS/SSS)-1.0E-10)630,630,540
  540 T5=T8*SL-T9*TL-SS/X
      TL=T8*TL+T9*SL-TS/X
      SL=T5
      SSS=SSS+SS
      STS=STS+TS
      SSL=SSL+SL
      STL=STL+TL
      EN=EN+1.0
  620 CONTINUE
  630 T8=SIN (T3)
      T9=COS (T3)
      Y=SSS*T9-STS*T8
      Z=SSL*T9-STL*T8
  665 GO TO (670,810),I
  670 M=1
  671 N=ABS (DEL/H)+1.0
      DX=DEL/FLOAT(N)
      T1=DX/2.
      T2=DX/8.
      T3=TE
      DO 805 I=1,N
      T4=DX*(T3/X-1.)*Y
      X=X+T1
      T5=DX*(T3/X-1.)*(Y+T1*Z+T2*T4)
      X=X+T1
      T6=DX*(T3/X-1.)*(Y+DX*Z+T1*T5)
      Y=Y+DX*(Z+(T4+2.*T5)/6.)
      Z=Z+(T4+4.*T5+T6)/6.
  805 CONTINUE
      GO TO (810,828),M
  810 G(1)=Y
      M=2
      DEL=RP-R
      W=Z
      GO TO 671
  828 GP(1)=Y
      T1=TF
      T8=SQRT (1.+T1)
      G(2)=((1./R+E)*G(1)-W)/T8
      GP(2)=((1./RP+E)*Y-Z)/T8
      T2=1.0
      T3=2.0
      DO 910 I=3,LL
      T4=T2+T3
      T5=T2*T3
      T6=T3*SQRT (T2*T2+T1)
      T7=T2*SQRT (T3*T3+T1)
      G (I)=(T4*(E+T5/R )*G (I-1)-T6*G (I-2))/T7
      GP(I)=(T4*(E+T5/RP)*GP(I-1)-T6*GP(I-2))/T7
      T2=T2+1.0
      T3=T3+1.0
  910 CONTINUE
      I=L+11
      N=2.*R+11.
      IF(I-N)960,960,950
  950 N=I
  960 Y=1.0D-20
      YP=Y
      X=Y
      XP=X
      Z=0.0
      ZP=Z
      T2=N
 1000 T3=T2+1.0
      T4=T2+T3
      T5=T2*T3
      T6=T2*SQRT (T3*T3+T1)
      T7=T3*SQRT (T2*T2+T1)
      Y =(T4*(E+T5/R )*Y -T6*Z )/T7
      YP=(T4*(E+T5/RP)*YP-T6*ZP)/T7
      IF(N-LL)1060,1060,1080
 1060 F(N)=Y
      FP(N)=YP
      GO TO 1120
 1080 IF(1.-ABS (Y))1090,1090,1120
 1090 CONTINUE
      Y =Y *1.0D-20
      YP=YP*1.0D-20
      X =X *1.0D-20
      XP=XP*1.0D-20
 1120 N=N-1
      Z=X
      ZP=XP
      X=Y
      XP=YP
      T2=T2-1.0
      IF(N)1150,1150,1000
 1150 Y=F(1)*G(2)-F(2)*G(1)
      YP=FP(1)*GP(2)-FP(2)*GP(1)
      Z=1./(Y*T8)
      ZP=1./(YP*T8)
      DO 1180 I=1,LL
      FP(I)=FP(I)*ZP
 1180 F(I)=F(I)*Z
      RETURN
      END
      SUBROUTINE POLFCT(POL,SUMR,SUMI,JSX,JRX)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION SUMR(5,5),SUMI(5,5),B(2,2),C(3,3),D(3,3,3),TSUM(8)
     1,POL(9), DR(3,3,3),DI(3,3),SF(3,3)
C
C     DATA FOR SIGMA-Y
C
C     SPIN-1/2
      DATA B/0.0,-1.0,1.0,0.0/
C
C     SPIN-1
      DATA C/0.0,-.707106781,0.0,.707106781,0.0,-.707106781,0.0,.7071067
     181,0.0/
C
C     DATA FOR TENSOR SIGMA X SIGMA
      DATA D/0.0,0.0,1.732050807,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.22474487
     11,0.0,0.0,0.0,1.224744871,0.0,0.0,0.0,.707106781,0.0,0.0,0.0,-1.41
     24213561,0.0,0.0,0.0,.707106781/
C
C     DATA FOR SPIN-FLIP CALCULATIONS
      DATA DR/1.,0.,0.,0.,0.,0.,0.,0.,0., .707106781,0.,0.,0.,
     1 .707106781,0.,0.,0.,0., .5,0.,-.5,0.,0.,0.,-.5,0.,.5/
      DATA DI/0.,.707106781,0., .707106781,0.,.707106781, 0.,
     1 .70716781,0./
      DATA SF/0.,1.,0., 1.,0.,1., 0.,1.,0./
      DO 2 I=1,9
      POL(I)=0.0
    2 CONTINUE
      JS=JSX
      JR=JRX
      LDEL=0
      M=1
      GO TO 6
    5 JS=JRX
      JR=JSX
      LDEL=4
      M=2
    6 CONTINUE
      I0 = 0
      J0 = 0
      IF (JR.EQ.1) I0 = 1
      IF (JS.EQ.1) J0 = 1
      DO 100 I=1,JR
      DO 90 J=1,JS
      DO 7 K=1,8
      TSUM(K)=0.0
    7 CONTINUE
      TR = 0.0
      TI = 0.0
      DO 80 K=1,JS
      IF(JS.GT.3) GO TO 80
      GO TO (10,20,30),JS
   10 TEMP=1.0
      GO TO 50
   20 TEMP=B(K,J)
      GO TO 50
   30 TEMP=C(K,J)
   50 CONTINUE
      GO TO (61,62),M
   61 T1=SUMR(K,I)
      T2=SUMI(K,I)
      GO TO 70
   62 T1=SUMR(I,K)
      T2=SUMI(I,K)
      FR = 0.0
      FI = 0.0
      IF ((JS.GT.3).OR.(JR.GT.3)) GO TO 70
      DO 64 L=1,JR
      FR = FR + DR(I,L,JR)*SUMR(L,K) + DI(I,L)*SUMI(L,K)
      FI = FI + DR(I,L,JR)*SUMI(L,K) - DI(I,L)*SUMR(L,K)
   64 CONTINUE
      TR = TR + DR(J,K,JS)*FR - DI(J,K)*FI
      TI = TI + DR(J,K,JS)*FI + DI(J,K)*FR
   70 CONTINUE
      TSUM(1)=TSUM(1)-T2*TEMP
      TSUM(2)=TSUM(2)+T1*TEMP
      IF(JS-3)80,71,80
   71 CONTINUE
      DO 75 L=1,3
      LL=L+L+1
      TEMP=D(K,J,L)
      TSUM(LL  )=TSUM(LL  )+T1*TEMP
      TSUM(LL+1)=TSUM(LL+1)+T2*TEMP
   75 CONTINUE
   80 CONTINUE
      GO TO (81,82),M
   81 T1=SUMR(J,I)
      T2=SUMI(J,I)
      GO TO 83
   82 T1=SUMR(I,J)
      T2=SUMI(I,J)
      IF (IABS(JS-JR).EQ.1) GO TO 83
      IF ((JS.GT.3).OR.(JR.GT.3)) GO TO 83
      POL(9) = POL(9) + SF(I+I0,J+J0)*(TR*TR+TI*TI)
   83 CONTINUE
      DO 85 L=1,4
      LL=L+L-1
      K=L+LDEL
      POL(K)=POL(K)+TSUM(LL  )*T1+TSUM(LL+1)*T2
   85 CONTINUE
   90 CONTINUE
  100 CONTINUE
      GO TO (5,105),M
  105 POL(7)=-POL(7)
      POL(5)=-POL(5)
      RETURN
      END
      SUBROUTINE RADIN(KT,DRF,VB,UB,SL,RMS,OPT,SI,ICODE,LTR1,FMUV,KMAX)
C     THE NEXT 1 CARDS CONVERT DWUCK TO AN IBM 360
      IMPLICIT REAL*8(A-H,O-Z)
C     INTEGRATES U1(X)*U2(X)*G-SUB-L(X,R)*X**2*DX
C     USES SIMPSON'S RULE  (BOTH END POINTS ARE ZERO)
      DIMENSION UB(KMAX,2),VB(800),SI(800),DG(2)
      KMAX2=KMAX +KMAX
      KMAX3=KMAX2+KMAX
      TERM=2.0*FMUV*FMUV
      DG(1)=2.0*DRF/3.0
      DG(2)=2.0*DG(1)
      R2=0.0
      SL=0.0
      RMS=0.0
      DO 200 M=1,KT
      MK=M+M-1
      R2=R2+DRF
      SLL=0.0
      MX=1
      R1=0.0
      DO 100 MM=1,KT
      R1=R1+DRF
      MX=3-MX
      F1=DG(MX)*UB(MM,1)*UB(MM,2)*R1*R1
      IF(ICODE.NE.4) GO TO 60
      TEMP=VB(M)*VB(MM)
      IF(TEMP.LT.1.0D-37) GO TO 100
      M12=IABS(M-MM)+1
      TEMP=VB(M12)
      X=TERM*R1*R2
      TEMP=TEMP*SBESM1(LTR1,X)
      GO TO 95
   60 CONTINUE
      IF(M-MM)70,90,80
   70 TEMP=VB(M)*VB(MM+KMAX3)
      GO TO 95
   80 TEMP=VB(MM+KMAX2)*VB(M+KMAX)
      GO TO 95
   90 TEMP=0.5*(VB(M)*VB(MM+KMAX3)+VB(MM+KMAX2)*VB(M+KMAX))
   95 CONTINUE
      SLL=SLL+F1*TEMP
  100 CONTINUE
      TEMP=SLL*OPT
      SI(MK)=SI(MK)+TEMP
      RSQ=R2*R2
      TEMP=TEMP*RSQ
      SL=SL+TEMP
      RMS=RMS+TEMP*RSQ
  200 CONTINUE
      IF(SL.NE.0.0) RMS=SQRT(RMS/SL)
      SL=SL*DRF
      RETURN
      END
      SUBROUTINE SLATR (KT,DRF,VB,MINL,FMU,ICODE,KMAX)
      IMPLICIT REAL*8(A-H,O-Z)
C     COMPUTES G-SUB-L(X,R)
      DIMENSION VB(800)
C
C     YUKAWA SLATER EXPANSION
C
      R=0.0
      IF(ICODE.EQ.2) GO TO 101
      IF(ICODE.EQ.4) GO TO 201
C
C     HANKEL FUNCTION (MODIFIED SPHERICAL BESSEL FUNCTION, 3RD KIND)
C
      F1=1.0
      F2=EXP(-FMU*DRF)
      DO 100 M=1,KT
      R=R+DRF
      X=FMU*R
      F1=F1*F2
      B2=1.0/X
      IF(MINL.EQ.1) GO TO 55
      B1=B2*(1.0+B2)
      FL=-1.0
      DO 50 LL=1,MINL
      B3=FL*B2/X+B1
      B1=B2
      B2=B3
      FL=FL+2.0
   50 CONTINUE
   55 CONTINUE
      VB(M+KMAX)=B2*F1
C
C     BESSEL FUNCTION (MODIFIED SPHERICAL BESSEL FUNCTION, 1ST KIND)
C
      VB(M     )=SBESM1(MINL,X)/F1
  100 CONTINUE
      GO TO 400
C
C     COULOMB SLATER EXPANSION
C
  101 CONTINUE
      FL=MINL+MINL-1
      DO 200 M=1,KT
      R=R+DRF
      A2=1.0
      DO 105 LL=1,MINL
      A2=A2*R
  105 CONTINUE
      VB(M     )=A2/(R*FL)
      VB(M+KMAX)=1.0/A2
  200 CONTINUE
      GO TO 400
C
C     GAUSSIAN PART OF GAUSSIAN INTERACTION
C
  201 CONTINUE
      X=FMU*DRF
      X2=X*X
      F1=1.0
      F2=EXP(-X2)
      VB(1)=1.0
      VB(2)=F2
      M=1
      DO 300 K=3,KT
      M=M+1
      M2=M*M
      IF(F1.GT.1.E-30) GO TO 250
      VB(K)=0.0
      GO TO 300
 250  CONTINUE
      F1=F2**M2
      VB(K)=F1
  300 CONTINUE
  400 RETURN
      END
      FUNCTION SBESM1(LP,X)
      IMPLICIT REAL*8(A-H,O-Z)
C     COMPUTES EXP(-X) * MODIFIED SPHERICAL BESSEL FUNC., 1ST KIND
C     ANGULAR MOMENTUM  LP = L+1
      MAX=X+X+10.0
      MAX=MAX0(MAX,LP+5)
      A3=0.0
      A2=1.0
      A1=1.0
      TEMP=1.0
      IF(LP.EQ.1) GO TO 80
      FL=MAX+MAX+3
      DO 70 I=1,MAX
      N=MAX+1-I
      FL=FL-2.0
      A1=A3+FL*A2/X
      IF(N.LT.LP) GO TO 65
      IF(ABS(A1).LT.1.0E20) GO TO 65
      A1=A1*1.0D-20
      A2=A2*1.0D-20
   65 CONTINUE
      IF(LP.EQ.N) TEMP=A1
      A3=A2
      A2=A1
   70 CONTINUE
   80 CONTINUE
      TWOX=X+X
      F1=0.0
      IF(TWOX.LT.16.0) F1=EXP(-TWOX)
      AZ=(1.0-F1)/TWOX
      SBESM1=(TEMP/A1)*AZ
      RETURN
      END
      SUBROUTINE DSTRIP(IQ,DR,K,F,FR,QNUM,OPT,RMS,KM,SL)
C     THE NEXT 3 CARDS CONVERT DWUCK TO AN IBM 360
      IMPLICIT REAL*8(A-H,O-Z)
C     SQRT(XXX)=DSQRT(XXX)
C     FLOAT(III)=DFLOAT(III)
      DIMENSION F(400,2),FR(800),QNUM(4,2),TVCC(10),IQ(3),D1(10),D2(10)
     1,         AH(36),WH(36),AG(15),WG(15)
C
C     GAUSS-HERMITE  POINTS AND WEIGHTS
C
      DATA AH/7.0710678D-01,5.2464762D-01,1.6506801D 00,4.3607741D-01,
     1        1.3358491D 00,2.3506050D 00,3.8118699D-01,1.1571937D 00,
     2        1.9816568D 00,2.9306374D 00,3.4290133D-01,1.0366108D 00,
     3        1.7566836D 00,2.5327317D 00,3.4361591D 00,3.1424038D-01,
     4        9.4778839D-01,1.5976826D 00,2.2795071D 00,3.0206370D 00,
     5        3.8897249D 00,2.9174551D-01,8.7871379D-01,1.4766827D 00,
     6        2.0951833D 00,2.7484707D 00,3.4626569D 00,4.3044486D 00,
     7        2.7348105D-01,8.2295145D-01,1.3802585D 00,1.9517880D 00,
     8        2.5462022D 00,3.1769992D 00,3.8694479D 00,4.6887389D 00/
      DATA WH/8.8622692D-01,8.0491408D-01,8.1312835D-02,7.2462959D-01,
     1        1.5706732D-01,4.5300099D-03,6.6114701D-01,2.0780232D-01,
     2        1.7077983D-02,1.9960407D-04,6.1086263D-01,2.4013861D-01,
     3        3.3874394D-02,1.3436457D-03,7.6404328D-06,5.7013523D-01,
     4        2.6049231D-01,5.1607985D-02,3.9053906D-03,8.5736870D-05,
     5        2.6585517D-07,5.3640591D-01,2.7310561D-01,6.8505534D-02,
     6        7.8500547D-03,3.5509261D-04,4.7164843D-06,8.6285911D-09,
     7        5.0792947D-01,2.8064746D-01,8.3810041D-02,1.2880311D-02,
     8        9.3228400D-04,2.7118601D-05,2.3209808D-07,2.6548075D-10/
C
C     GAUSS-LEGENDRE POINTS AND WEIGHTS
C
      DATA AG/0.57735027,0.33998104,0.86113631,0.23861919,0.66120939,
     1        0.93246951,0.18343464,0.52553241,0.79666648,0.96028986,
     2        0.14887434,0.43339539,0.67940957,0.86506337,0.97390653/
      DATA WG/1.00000000,0.65214515,0.34785485,0.46791393,0.36076157,
     1        0.17132449,0.36268378,0.31370665,0.22238130,0.10122854,
     2        0.29552422,0.26926672,0.21908636,0.14945135,0.06667134/
      DATA PI   /3.141592/
      FKAP=RMS
      L =IQ(1)
      IS=IQ(2)
      JJ=IQ(3)
      N1=QNUM(1,1)
      N2=QNUM(1,2)
      L1=QNUM(2,1)
      L2=QNUM(2,2)
      J1=QNUM(3,1)
      J2=QNUM(3,2)
      IS1=QNUM(4,1)*2.0
      IS2=QNUM(4,2)*2.0
      IF(PHASEF(L1+L2-L).LT.0.0) GO TO 1000
      ITEMP=N1+N1+N2+N2
      KR=(ITEMP+L1+L2-L+3)/4+8
      KR=(KR+1)/2
      NX=(ITEMP+L1+L2+L+2)/4+2
      NX=(NX+1)/2
      WRITE(6,9000)KR,NX
 9000 FORMAT(15H0 NO. R STEPS =,I3,18H     NO. X STEPS =,I3)
      IF(KR.GT.8) KR=8
      NKR=(KR*(KR-1))/2
      IF(NX.GT.5) NX=5
      NKX=(NX*(NX-1))/2
      LL=L+L
      LL1=L1+L1
      LL2=L2+L2
      FACT1=EXP(YXFCT(L1,LL1))/2.0**L1
      FACT2=EXP(YXFCT(L2,LL2))/2.0**L2
      TEMP=2.0
      DO 20 I=1,4
      IF(QNUM(I,1)-QNUM(I,2))25,20,25
   20 CONTINUE
      TEMP=4.0
   25 CONTINUE
      FNORM=(16.0/PI)*SQRT(DFLOAT((LL1+1)*(LL2+1))/(DFLOAT(LL+1)*TEMP))
      FNORM=FNORM*SQRT(DFLOAT((LL+1)*(IS+1)*(J1+1)*(J2+1)))
     1  *WINEJ(LL1,IS1,J1,LL2,IS2,J2,LL,IS,JJ)
      FM1=1.0
      FM2=1.0
      FL1=L1
      FL2=L2
      LPL=MIN0(L1,L2)+1
      DO 30 M=1,LPL
      M2=M+M-2
      FM=M-1
      TVCC(M)=VCC(LL1,LL2,LL,M2,-M2)*2.0/SQRT(FM1*FM2)
      FM1=FM1*(FL1+FM+1)*(FL1-FM)
      FM2=FM2*(FL2+FM+1)*(FL2-FM)
   30 CONTINUE
      TVCC(1)=TVCC(1)/2.0
C
C     CENTER OF MASS R LOOP
C
      R=0.0
      DO 500 M=1,K
      R=R+DR
      RSQ=R*R
      SUMR=0.0
      MK=M+M-1
C
C     RELATIVE R LOOP
C
      DO 400 MR=1,KR
      INDX=NKR+MR
      RHO=AH(INDX)
      RS=RHO*FKAP
      WR=WH(INDX)
      RSSQ=RS*RS+RSQ
      RPROD=2.0*R*RS
C
C     RELATIVE R ANGLE LOOP
C
      SUMX=0.0
      DO 300 MX=1,NX
      INDX=NKX+MX
      X=AG(INDX)
      WX=WG(INDX)
      R1=SQRT(RSSQ-RPROD*X)
      R2=SQRT(RSSQ+RPROD*X)
      FK1=R1/DR
      K1=FK1
      FK1=FK1-FLOAT(K1)
      IF(K1.GT.K) GO TO 300
      FK2=R2/DR
      K2=FK2
      FK2=FK2-FLOAT(K2)
      IF(K2.GT.K) GO TO 300
      COS1=(R-RS*X)/R1
      COS2=(R+RS*X)/R2
      SIN1=SQRT(1.0-COS1*COS1)
      SIN2=SQRT(1.0-COS2*COS2)
      IX=0
  120 CONTINUE
      DM1=0.0
      DL1=FACT1
      IF(L1.EQ.0) GO TO 141
      DO 140 LI=1,L1
      DL1=DL1*SIN1
  140 CONTINUE
  141 CONTINUE
      D1(L1+1)=DL1
      DM2=0.0
      DL2=FACT2
      IF(L2.EQ.0) GO TO 151
      DO 150 LI=1,L2
      DL2=DL2*SIN2
  150 CONTINUE
  151 CONTINUE
      D2(L2+1)=DL2
      IF(L1.EQ.0) GO TO 171
      FJ1=1.0
      FL1=LL1
      FM1=LL1
      DO 170 LI=1,L1
      DK1=(FM1*COS1*DL1/SIN1-DM1)/(FJ1*FL1)
      FJ1=FJ1+1.0
      FL1=FL1-1.0
      FM1=FM1-2.0
      DM1=DL1
      DL1=DK1
      INDX=L1+1-LI
      D1(INDX)=DL1
  170 CONTINUE
  171 CONTINUE
      IF(L2.EQ.0) GO TO 181
      FJ2=1.0
      FL2=LL2
      FM2=LL2
      DO 180 LI=1,L2
      DK2=(FM2*COS2*DL2/SIN2-DM2)/(FJ2*FL2)
      FJ2=FJ2+1.0
      FL2=FL2-1.0
      FM2=FM2-2.0
      DM2=DL2
      DL2=DK2
      INDX=L2+1-LI
      D2(INDX)=DL2
  180 CONTINUE
  181 CONTINUE
      PROD=0.0
      DO 185 LI=1,LPL
      PROD=PROD+D1(LI)*D2(LI)*TVCC(LI)
  185 CONTINUE
  280 CONTINUE
      F1=FK1*(F(K1+1,1)-F(K1,1))+F(K1,1)
      F2=FK2*(F(K2+1,2)-F(K2,2))+F(K2,2)
      SUMX=SUMX+WX*PROD*F1*F2
      IF(IX.NE.0) GO TO 300
      IX=1
      ITEMP=K1
      K1=K2
      K2=ITEMP
      ATEMP=FK1
      FK1=FK2
      FK2=ATEMP
      ATEMP=COS1
      COS1=COS2
      COS2=ATEMP
      ATEMP=SIN1
      SIN1=SIN2
      SIN2=ATEMP
      IF(L1.EQ.L2) GO TO 280
      GO TO 120
  300 CONTINUE
      SUMR=SUMR+WR*SUMX*RHO*RHO
  400 CONTINUE
      SUMR=SUMR*FNORM*OPT
      FR(MK)=FR(MK)+SUMR
      IF(M.EQ.KM) SL=SUMR
  500 CONTINUE
 1000 CONTINUE
      RETURN
      END
      FUNCTION YXFCT(M,N)
      IMPLICIT REAL*8(A-H,O-Z)
C     COMPUTES LN(NFACT/MFACT)
C
C     A TABLE OF LOG(N FACTORIAL), N = 0 TO 81.
C
      DIMENSION F(82),A(52),B(30)
      COMMON /FACTRL/ F
      EQUIVALENCE (F(1),A(1)), (F(53),B(1))
      DATA A/0.0D0, 0.0D0
     1    ,6.9314718055995D-01,1.7917594692281D+00,3.1780538303479D+00
     2    ,4.7874917427820D+00,6.5792512120101D+00,8.5251613610654D+00
     3    ,1.0604602902745D+01,1.2801827480081D+01,1.5104412573076D+01
     4    ,1.7502307845874D+01,1.9987214495662D+01,2.2552163853123D+01
     5    ,2.5191221182739D+01,2.7899271383841D+01,3.0671860106081D+01
     6    ,3.3505073450137D+01,3.6395445208033D+01,3.9339884187199D+01
     7    ,4.2335616460753D+01,4.5380138898477D+01,4.8471181351835D+01
     8    ,5.1606675567764D+01,5.4784729398112D+01,5.8003605222981D+01
     9    ,6.1261701761002D+01,6.4557538627006D+01,6.7889743137182D+01
     *    ,7.1257038967168D+01,7.4658236348830D+01,7.8092223553315D+01
     1    ,8.1557959456115D+01,8.5054467017582D+01,8.8580827542198D+01
     2    ,9.2136175603687D+01,9.5719694542143D+01,9.9330612454787D+01
     3    ,1.0296819861451D+02,1.0663176026064D+02,1.1032063971476D+02
     4    ,1.1403421178146D+02,1.1777188139975D+02,1.2153308151544D+02
     5    ,1.2531727114936D+02,1.2912393363913D+02,1.3295257503562D+02
     6    ,1.3680272263733D+02,1.4067392364823D+02,1.4456574394634D+02
     7    ,1.4847776695177D+02,1.5240959258450D+02/
      DATA B/1.5636083630308D+02
     1    ,1.6033112821663D+02,1.6432011226320D+02,1.6832744544843D+02
     2    ,1.7235279713916D+02,1.7639584840700D+02,1.8045629141754D+02
     3    ,1.8453382886145D+02,1.8862817342367D+02,1.9273904728784D+02
     4    ,1.9686618167289D+02,2.0100931639928D+02,2.0516819948264D+02
     5    ,2.0934258675254D+02,2.1353224149456D+02,2.1773693411395D+02
     6    ,2.2195644181913D+02,2.2619054832373D+02,2.3043904356578D+02
     7    ,2.3470172344282D+02,2.3897838956183D+02,2.4326884900298D+02
     8    ,2.4757291409619D+02,2.5189040220972D+02,2.5622113555001D+02
     9    ,2.6056494097186D+02,2.6492164979855D+02,2.6929109765102D+02
     *    ,2.7367312428569D+02,2.7806757344037D+02/
C
      YXFCT=0.D0
      NUMAX=M-N
      IF(NUMAX) 30,100,20
   20 ICTRL=0
      L1=N
      L2=M
      GO TO 40
   30 ICTRL=1
      NUMAX=-NUMAX
      L1=M
      L2=N
   40 CONTINUE
      IF(L1.GT.81) GO TO 45
      IF(L2.GT.81) GO TO 42
      YXFCT=F(L2+1)-F(L1+1)
      GO TO 90
   42 CONTINUE
      YXFCT=F(82)-F(L1+1)
      L1=81
      NUMAX=L2-L1
   45 CONTINUE
      FCTOR=L1
      TERM=1.D0
      DO 50 NU=1,NUMAX
      FCTOR=FCTOR+1.D0
      TERM=TERM*FCTOR
      IF(TERM.LT.1D20) GO TO 50
      YXFCT=YXFCT+LOG(TERM)
      TERM=1.D0
   50 CONTINUE
      YXFCT=YXFCT+LOG(TERM)
   90 CONTINUE
      IF(ICTRL.EQ.0) YXFCT=-YXFCT
  100 RETURN
      END
      FUNCTION PHASEF(N)
      IMPLICIT REAL*8(A-H,O-Z)
      PHASEF=FLOAT(1-2*IABS(N-2*(N/2)))
      RETURN
      END
      FUNCTION DELR(J1,J2,J3)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION F(82),FACT(81)
      COMMON /FACTRL/ F
      EQUIVALENCE (FACT(1),F(2))
C
      JZ1=(J1+J2-J3)/2
      IF(JZ1.LT.0) GO TO 130
      JZ2=(J1-J2+J3)/2
      IF(JZ2.LT.0) GO TO 130
      JZ3=(J2+J3-J1)/2
      IF(JZ3.LT.0) GO TO 130
      JZ4=(J1+J2+J3)/2+1
      IF(JZ3.LT.JZ2) GO TO 80
      IF(JZ3.LT.JZ1) GO TO 70
      DELR=YXFCT(JZ4,JZ3)+FACT(JZ1)+FACT(JZ2)
      GO TO 150
   70 DELR=YXFCT(JZ4,JZ1)+FACT(JZ2)+FACT(JZ3)
      GO TO 150
   80 IF(JZ2.LT.JZ1) GO TO 70
      DELR=YXFCT(JZ4,JZ2)+FACT(JZ1)+FACT(JZ3)
      GO TO 150
  130 DELR=-1000.D0
  150 RETURN
      END
      FUNCTION VCC(JX1,JX2,JX3,MX1,MX2)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION F(82),FACT(81)
      COMMON /FACTRL/ F
      EQUIVALENCE (FACT(1),F(2))
C
      VCC=0.D0
      J1=JX1
      J2=JX2
      J3=JX3
      M1=MX1
      M2=MX2
      IF(J1.LT.J2) GO TO 20
      IF(J3.LT.J2) GO TO 30
      ICNTR=0
      GO TO 40
   20 IF(J3.LT.J1) GO TO 30
      ICNTR=-1
      IT=J1
      J1=J2
      J2=IT
      IT=M1
      M1=M2
      M2=IT
      GO TO 40
   30 ICNTR=1
      IT=J2
      J2=J3
      J3=IT
      M2=-M1-M2
   40 CONTINUE
      JZ1=(J1+J2-J3)/2
      IF(JZ1.LT.0) GO TO 150
      JZ2=(J1+J3-J2)/2
      IF(JZ2.LT.0) GO TO 150
      JZ3=(J2+J3-J1)/2
      IF(JZ3.LT.0) GO TO 150
      IF(J1-IABS(M1).LT.0) GO TO 150
      IF(J2-IABS(M2).LT.0) GO TO 150
      IF(J3-IABS(M1+M2).LT.0) GO TO 150
      JT1=(J1-J3+M2)/2
      JT2=(J2-J3-M1)/2
      NUMIN=MAX0(JT1,JT2,0)
      JT3=(J1-M1)/2
      JT4=(J2+M2)/2
      NUMAX=MIN0(JT3,JT4,JZ1)
      JT5=(J2-M2)/2
      IF(NUMAX.LT.NUMIN) GO TO 150
      J4=J1/2
      J5=J3/2
      PHAS=PHASEF(NUMIN)
      FCTOR=YXFCT(J4,(J1+M1)/2)+YXFCT(J4,JT3)+YXFCT((J1+J2+J3)/2+1,JZ2)
     1  +YXFCT(J5,(J3+M1+M2)/2)+YXFCT(J5,(J3-M1-M2)/2)
     2  +FACT(JZ1)+FACT(JZ3)+FACT(JT4)+FACT(JT5)+LOG(DFLOAT(J3+1))
      FCTOR=0.5*FCTOR
      DO 100 NU=NUMIN,NUMAX
      TERM=FCTOR    +(YXFCT(JT3-NU,J4)+YXFCT(NU-JT2,J5))
     1  -(FACT(JT4-NU)+FACT(NU-JT1)+FACT(JZ1-NU)+FACT(NU))
      VCC=VCC+PHAS*EXP(TERM)
      PHAS=-PHAS
  100 CONTINUE
      IF(ICNTR) 120,150,110
  110 VCC=VCC*SQRT(DFLOAT(J2+1)/DFLOAT(J3+1))*PHASEF(JT3)
      GO TO 150
  120 VCC=VCC*PHASEF(JZ1)
  150 RETURN
      END
      FUNCTION RACAH(J1,J2,J3,J4,J5,J6)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION F(82),FACT(81)
      COMMON /FACTRL/ F
      EQUIVALENCE (FACT(1),F(2))
C
      RACAH=0.D0
      Z1=DELR(J1,J2,J5)
      IF(Z1.LE.-999.0) GO TO 90
      Z1=DELR(J3,J4,J5)+Z1
      IF(Z1.LE.-999.0) GO TO 90
      Z2=DELR(J1,J3,J6)
      IF(Z2.LE.-999.0) GO TO 90
      Z2=DELR(J2,J4,J6)+Z2
      IF(Z2.LE.-999.0) GO TO 90
      Z1=0.5*(Z1+Z2)
      JT1=(J1+J2+J5)/2
      JT2=(J3+J4+J5)/2
      JT3=(J1+J3+J6)/2
      JT4=(J2+J4+J6)/2
      JZ1=(J1+J2+J3+J4)/2
      JZ2=(J1+J4+J5+J6)/2
      JZ3=(J2+J3+J5+J6)/2
      NUMIN=MAX0(JT1,JT2,JT3,JT4)
      NUMAX=MIN0(JZ1,JZ2,JZ3)
      IF(NUMAX.LT.NUMIN) GO TO 90
      PHASE=PHASEF(NUMIN+JZ1)
      DO 80 NU=NUMIN,NUMAX
      JY1=NU-JT1
      JY2=NU-JT2
      JY3=NU-JT3
      JY4=JZ1-NU
      JY5=JZ2-NU
      JY6=JZ3-NU
      FCTOR=FACT(JY1)+FACT(JY2)+FACT(JY3)+YXFCT(NU+1,NU-JT4)
     1  +FACT(JY4)+FACT(JY5)+FACT(JY6)
      ARG=Z1-FCTOR
      IF(ARG.GT.-40.0) RACAH=RACAH+PHASE*EXP(ARG)
      PHASE=-PHASE
   80 CONTINUE
   90 RETURN
      END
      FUNCTION WINEJ(J1,J2,J3,J4,J5,J6,J7,J8,J9)
      IMPLICIT REAL*8(A-H,O-Z)
      WINEJ=0.D0
      NUMIN=MAX0(IABS(J1-J9),IABS(J2-J6),IABS(J4-J8))
      NUMAX=MIN0(J1+J9,J2+J6,J4+J8)
      IF(NUMAX.LT.NUMIN) GO TO 40
      DO 20 NUX=NUMIN,NUMAX,2
      NU=NUX
      PROD=RACAH(J1,J4,J9,J8,J7,NU)*RACAH(J2,J5,NU,J4,J8,J6)
     1    *RACAH(J9,NU,J3,J2,J1,J6)*FLOAT(NU+1)
      WINEJ=WINEJ+PROD
   20 CONTINUE
      WINEJ=WINEJ*PHASEF((J1+J3+J5+J8)/2+J2+J4+J9)
   40 RETURN
      END
      SUBROUTINE LGNDR(PLM,MPLUS,LPLUS,THET)
C     THE NEXT 3 CARDS CONVERT DWUCK TO AN IBM 360
      IMPLICIT REAL*8(A-H,O-Z)
C     SIN(XXX)=DSIN(XXX)
C     COS(XXX)=DCOS(XXX)
      DIMENSION PLM(459)
      THETA=THET /57.295779
      Y=COS(THETA)
      Z=SIN(THETA)
      IX=0
      DO 100 M=1,MPLUS
      LX=M-1
      L2=0
      P3=1.D0
      FL1=LX
      IF(LX.EQ.0) GO TO 41
      DO 40 LT=1,LX
      FL1=FL1+1.D0
      P3=P3*FL1*Z/2.0
   40 CONTINUE
   41 P2=0.D0
      FL2=FL1+1.D0
      FL3=1.D0
      DO 90 LT=1,LPLUS
      IX1=IX+LT
      IF(L2-LX)50,70,60
   50 PLM(IX1)=0.D0
      GO TO 75
   60 P3=(FL2*Y*P2-FL1*P1)/FL3
      FL1=FL1+1.D0
      FL2=FL2+2.D0
      FL3=FL3+1.D0
   70 PLM(IX1)=P3
      P1=P2
      P2=P3
   75 L2=L2+1
   90 CONTINUE
      IX=IX+LPLUS
  100 CONTINUE
      RETURN
      END
      SUBROUTINE DWPLOT(NTH,NCYCLE,SIGMA,DTH,THZERO)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION SIGMA(1),ARRAY(26),STAR(4),STAR0(4),STAR1(4),STAR2(4)
      DATA BAR,BLNK,AXIS,PLUS,PLAX/4H|   ,4H    ,4H----,4H+   ,4H+---/
      DATA STAR /4H*   ,4H *  ,4H  * ,4H   */
      DATA STAR0/4H*---,4H-*--,4H--*-,4H---*/
      DATA STAR1/4H*   ,4H|*  ,4H| * ,4H|  */
      DATA STAR2/4H*---,4H+*--,4H+-*-,4H+--*/
      DATA ARRAY/26*4H    /
      A = SIGMA(1)
      DO 40 I=2,NTH
      IF (SIGMA(I).GT.A) A = SIGMA(I)
   40 CONTINUE
      IF (A.LE.0.) GO TO 200
      ARG = LOG10(A) - FLOAT(NCYCLE)/200.
      N = INT(ARG)
      IF (A.LT.1.) N = N - 1
      N = N - NCYCLE + 1
      NN1 = N + 1
      NN2 = N + 2
      NN3 = N + 3
      NN4 = N + 4
      NN5 = N + 5
      GO TO (50,60,70,80,90), NCYCLE
   50 WRITE(6,11) N,NN1
      GO TO 100
   60 WRITE(6,12) N,NN1,NN2
      GO TO 100
   70 WRITE(6,13) N,NN1,NN2,NN3
      GO TO 100
   80 WRITE(6,14) N,NN1,NN2,NN3,NN4
      GO TO 100
   90 WRITE(6,15) N,NN1,NN2,NN3,NN4,NN5
  100 A = N
      B = THZERO
      C = 100./FLOAT(NCYCLE)
      BASE = 10.**N
      IWORD=1
      DO 180 I=1,NTH
      IF (I.EQ.1.OR.I.EQ.NTH) THEN
      ARRAY(1)=PLAX
      ARRAY(26)=PLUS
      DO 2 K=2,25
2     ARRAY(K) = AXIS
      ELSE
      ARRAY(1)=BAR
      ARRAY(26)=BAR
      ENDIF
      IF (SIGMA(I).LT.BASE) GO TO 130
      ARG = (LOG10(SIGMA(I))-A)*C 
      J = NINT(ARG)
      IWORD=J/4 + 1
      IKAR=J - 4*(IWORD-1)
      IF (I.EQ.1.OR.I.EQ.NTH) THEN
        IF (IWORD.NE.1) THEN
        ARRAY(IWORD)=STAR0(IKAR+1)
        ELSE
        ARRAY(1)=STAR2(IKAR+1)
        ENDIF
      ELSE
        IF(IWORD.NE.1) THEN
        ARRAY(IWORD)=STAR(IKAR+1)
        ELSE
        ARRAY(1)=STAR1(IKAR+1)
        ENDIF
      ENDIF
  130 CONTINUE
      WRITE(6,18) B,SIGMA(I),ARRAY
      ARRAY(IWORD)=BLNK
      IF (I.EQ.1) THEN
      DO 3 K=2,25
3     ARRAY(K)=BLNK
      ENDIF
      B = B + DTH
  180 CONTINUE
  200 RETURN
C
C     STAR (*) CARRIAGE CONTROL PRINTS OVER PAGE EDGE.
C
   11 FORMAT(1H0,21X,4H10**,I3,97X,I3/4X,5HTHETA,6X,5HSIGMA,8X,1HI,99X,1
     1HI)
   12 FORMAT(1H0,21X,4H10**,2(I3,47X),I3/4X,5HTHETA,6X,5HSIGMA,8X,2(1HI,
     149X),1HI)
   13 FORMAT(1H0,21X,4H10**,2(I3,30X),I4,30X,I3/4X,5HTHETA,6X,5HSIGMA,8X
     1,2(1HI,32X),2H I,32X,1HI)
   14 FORMAT(1H0,21X,4H10**,4(I3,22X),I3/4X,5HTHETA,6X,5HSIGMA,8X,4(1HI,
     124X),1HI)
   15 FORMAT(1H0,21X,4H10**,5(I3,17X),I3/4X,5HTHETA,6X,5HSIGMA,8X,5(1HI,
     119X),1HI)
   18 FORMAT(1H*,F9.4,E14.4,4X,26A4)
      END
      SUBROUTINE POLPLT(NTH,NC,POL,DTH,THZERO)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION POL(1),ARRAY(26),STAR(4),STAR1(4),STAR2(4)
      DATA BAR1,BAR2/4H|   ,4H  | /
      DATA STAR /4H*   ,4H *  ,4H  * ,4H   */
      DATA STAR1/4H*   ,4H|*  ,4H| * ,4H|  */
      DATA STAR2/4H* | ,4H *| ,4H  * ,4H  |*/
      DATA ARRAY/26*4H    /
      DATA BLNK/4H    /
      IF(NC.GT.1) GO TO 40
      WRITE(6,11)
      GO TO 45
   40 CONTINUE
      WRITE(6,12)
   45 CONTINUE
      B=THZERO
      DO 180 I=1,NTH
      ARRAY(1)=BAR1
      ARRAY(13)=BAR2
      ARRAY(26)=BAR1
      ARG=50.0*(POL(I)+1.0) 
      IF(NC.EQ.1) GO TO 110
      ARRAY(26)=BLNK
      ARG=ARG/2.
  110 CONTINUE
      J = NINT(ARG)
      IWORD=J/4 + 1
      IKAR=J - 4*(IWORD-1)
      IF(IWORD.EQ.13) GO TO 130
      IF(IWORD.NE.1) GO TO 140
      ARRAY(1)=STAR1(IKAR+1)
      GO TO 150
  130 CONTINUE
      ARRAY(13)=STAR2(IKAR+1)
      GO TO 150
  140 CONTINUE
      ARRAY(IWORD)=STAR(IKAR+1)
  150 CONTINUE
      WRITE(6,18) B,POL(I),ARRAY
      ARRAY(IWORD)=BLNK
      IF(I.NE.1) GO TO 170
      IF(NC.GT.1) GO TO 160
      WRITE(6,16)
      GO TO 170
  160 CONTINUE
      WRITE(6,13)
  170 CONTINUE
      B = B + DTH
  180 CONTINUE
      IF(NC.GT.1) GO TO 190
      WRITE(6,17)
      GO TO 200
  190 CONTINUE
      WRITE(6,14)
  200 RETURN
C
C     STAR (*) CARRIAGE CONTROL PRINTS OVER PAGE EDGE.
C
   11 FORMAT(1H0,26X,3H-1.,48X,2H0.,47X,3H+1./4X,5HTHETA,7X,6HPOLIZ.,6X,
     110(1HI,9X),1HI)
   12 FORMAT(1H0,26X,3H-1.,23X,2H0.,22X,3H+1./4X,5HTHETA,7X,6HPOLIZ.,6X,
     110(1HI,4X),1HI)
   13 FORMAT(1H+,27X,51(1H-))
   14 FORMAT(1H*,27X,51(1H-))
   16 FORMAT(1H+,27X,101(1H-))
   17 FORMAT(1H*,27X,101(1H-))
   18 FORMAT(1H*,F9.4,F12.4,6X,26A4)
      END
      SUBROUTINE PLOT(SIG,DANGP,NANGP)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION ARRAY(26),STAR(4),STAR1(4)
      DIMENSION SIG(400)
      DATA BAR,BLNK/4H|   ,4H    /
      DATA STAR /4H*   ,4H *  ,4H  * ,4H   */
      DATA STAR1/4H*   ,4H|*  ,4H| * ,4H|  */
      DATA ARRAY/26*4H    /
      AN = 0.5D0
      XN = 100.D0
      WRITE(6,11) -AN,AN
      BASE = -AN
      B = 0.D0
      IWORD=1
  2   DO 180 I=1,NANGP
      ARRAY(1)=BAR
      ARRAY(26)=BAR
      IF (I.GT.1.AND.I.LT.NANGP) GOTO 10
      ARG1=XN
      J1=NINT(ARG1)
      IWORD1=J1/4+1
      IKAR1=J1-4*(IWORD1-1)
      ARRAY(IWORD1)=STAR(IKAR1+1)
  10  IF (SIG(I).LT.BASE) GOTO 130
      ARG = XN*((SIG(I)+AN)/(2.0*AN)) 
      J = NINT(ARG)
      IWORD=J/4 + 1
      IKAR=J - 4*(IWORD-1)
      IF(IWORD.NE.1) GOTO 125
      ARRAY(1)=STAR1(IKAR+1)
      GOTO 130
  125 CONTINUE
      ARRAY(IWORD)=STAR(IKAR+1)
  130 CONTINUE
      WRITE(6,18) B,SIG(I),ARRAY
      ARRAY(IWORD)=BLNK
      ARRAY(IWORD1)=BLNK
  150 IF (I.EQ.1) WRITE(6,16)
      B = B + DANGP
  180 CONTINUE
      WRITE(6,16)
  200 RETURN
C
C     STAR (*) CARRIAGE CONTROL PRINTS OVER PAGE EDGE.
C
11    FORMAT(1H0,21X,4X,F6.3,94X,F6.3/4X,6HRADIUS,3X,11HTRANS.DENS.,3X,
     1  1HI,99X,1HI)
16    FORMAT(1H+,27X,1H-,10(10H---------+))
   18 FORMAT(1H*,F9.4,E14.4,4X,26A4)
      END
C
C modified by JE,ME
      SUBROUTINE CUDATE(IDAT)
C     RETURNS THE DATE IN THE FORMAT: dd-Mon-yy
C
      CHARACTER DATE*8,TIME*10,ZONE*4, DAY*10
      CHARACTER*3 MONTH(12), MON
      INTEGER VALUES(8)
      DATA MONTH/'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
     1            'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'/
      SAVE MONTH
C
      CALL DATE_AND_TIME(DATE,TIME,ZONE,VALUES)
      MON = MONTH(VALUES(2))
      DAY = DATE(7:8)//'-'//MON(1:3)//'-'//DATE(3:4)
      RETURN
      END
